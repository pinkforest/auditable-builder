name: "Rust Auditable Builder"

on:
  workflow_dispatch:
#  workflow_call:
    inputs:
      component:
        description: 'Component user/repo'
        required: true
        type: string
      serial:
        description: 'Unique Serial Cache Id'
        required: true
        type: string
      use-cache:
        description: 'Use cache?'
        required: true
        default: true
        type: boolean

jobs:
  rust-builder:
    name: Rust ${{ inputs.component }} @ ${{ inputs.serial }} for ${{ matrix.rust-target }} on (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        rust-target:
          - x86_64-unknown-linux-gnu
        rust: [stable]
    env:
      TARGET_DIR: target/${{ matrix.rust-target }}/release
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.component }}
      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          target: ${{ matrix.rust-target }}
      ######################################################
      # Cargo Tools - Auditable, rust-audit-info
      #
      # https://github.com/rust-secure-code/cargo-auditable
      #
      - name: Cache Cargo Tools
        if: ${{ inputs.use-cache }}
        uses: actions/cache@v3
        with:
          key: cargo-tools-20220827-000
          path: |
            ~/.cargo
      - name: Install Cargo Tools
        run: |
          if [ ! -f $HOME/.cargo/bin/cargo-auditable ]; then
            cargo install cargo-auditable rust-audit-info
          fi

      ######################################################
      # Use serials:
      # PR-XXX-DATE
      # 
      - uses: Swatinem/rust-cache@v2
        if: ${{ inputs.use-cache }}
        with:
          key: ${ matrix.os }}-${{ matrix.rust-target }}-${{ inputs.component }}-${{ inputs.serial }}

      - name: Build Auditable Build
        run: |
          cargo auditable build --release --locked --frozen --bins --color always --target-dir ${{ env.TARGET_DIR }}

      - name: ls -laR (debug)
        run: ls -laR target/
      ######################################################
      # Upload artifacts
      #
      - name: Upload artifact - ${{ inputs.component }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.component }}-${{ matrix.rust-target }}
          path: |
            ${{ env.TARGET_DIR }}/
            !${{ env.TARGET_DIR }}/build
            !${{ env.TARGET_DIR }}/deps
            # .fingerprint .cargo-lock
            !${{ env.TARGET_DIR }}/.*
            !${{ env.TARGET_DIR }}/*.d
          retention-days: 1